###############
#    FILES    #
###############
output        = generic_output              # name of the output file WITHOUT the .root (it will be added by the program)
# saveAnalysisTreeName = temp.root          # if you want to save the tree produced by this ModuleCalibration run in a root file
# loadAnalysisTreeName = temp.root          # if you want to load a tree previously produced and saved by a ModuleCalibration run, instead of reproducing it

###############
#  GEOMETRY   #
###############
# elements building up the crystal array + detectors
ncrystalsx = 2            # number of crystal columns per detector
ncrystalsy = 2            # number of crystal rows per detector
nmppcx     = 4            # number of detector columns per module
nmppcy     = 4            # number of detector rows per module
nmodulex   = 1            # number of module columns
nmoduley   = 1            # number of module rows
# digitizer/electronics elements etc
digitizer     = 0 ,1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9 ,10,11,12,13,14,15                                   # channels from input that will be analyzed (input is 32 ch)
mppc          = D1,C1,B1,A1,D2,C2,B2,A2,D3,C3,B3,A3,D4,C4,B4,A4                                   # for each channel, the relative label
saturation    = 6525,6355,6456,6042,6375,6566,6645,6191,6340,6337,6361,6200,6176,6314,5946,6416   # saturation parameter per channel - NEWEST
plotPositions = 1,5,9,13,2,6,10,14,3,7,11,15,4,8,12,16                                            # for each channel, their position in a Root NxN canvas
# position on the array, in a map like the following (resembling ROOT Canvas->cd() )
# 1  2  3  4
# 5  6  7  8
# 9  10 11 12
# 13 14 15 16
xPositions    = -4.8,-4.8,-4.8,-4.8,-1.6,-1.6,-1.6,-1.6,1.6,1.6,1.6,1.6,4.8,4.8,4.8,4.8       # x positions of the mppc center in mm
yPositions    = 4.8,1.6,-1.6,-4.8,4.8,1.6,-1.6,-4.8,4.8,1.6,-1.6,-4.8,4.8,1.6,-1.6,-4.8       # y positions of the mppc center in mm
chainName = adc                                                                               # name of the ttree in each file of the input tchain
digitizerTotalCh = 32  #total number of ch in from the digitizer/electronics


# ON - OFF elements
# mppcOFF = D1,C1,B1,A1,D2,B2,A2,D3,C3,B3,A3,D4,C4,B4,A4
# crystalOFF = 20,21

# time cut of the dataset. If the data is not stable at the beginning of acquisition, the first nclock time samples can be ignored by the analysis
nclock = 0                                                                                 # number of clock samples from beginning of acquisition that will be ignored (default to 0)
expectedEnergyResolution = 0.17                                                            # energy resolution of the photopeak. Optional, if not given, 0.12 will be assumed
                                                                                           # for datasets without saturation correction, 0.25 for dataset with saturation correction

# histos and binnings
histo1Dmax = 25000
histo1Dbins = 250
histo2DchannelBin = 250
histo2DglobalBins = 1000
histo3DglobalBins = 100
wThreshold = 0.20

# Global 3D plots parameters for individual MPPCs
histo3DchannelBin = 100                                         # number of bins per dimension in 3D plots of single mppcs
clusterLevelPrecision = 20                                      # precision of the level search when separating the cluster of 3D points
clusterVolumeCut = 0.001                                        # percentage of total non-empty bins in 3D plot. if one volume is below this percentage, the separation mask is discarded and a new one is searched for

# Specific 3D plots parameters for single mppcs, to override the global 3D parameters
# specificMPPCname  = D1                       # add here the MPPC labels of the MPPCs for which you want to specify a different value for the 3d parameters. separated by commas
# specificBin       = 100                      # histo3DchannelBin for each one of the channels specified above
# specificPrecision = 10                       # clusterLevelPrecision for each one of the channels specified above
# specificCut       = 0.0001                   # clusterVolumeCut for each one of the channels specified above

# doi tagging bench
usingTaggingBench = 0         # if this is a tagging DOI bench measurement, put 1, otherwise 0
taggingPosition = 13.97       # position of the tagging bench in mm
taggingCrystalChannel = 16    # ch number of the tagging crystal in the input

# stuff
usingRealSimData = 0       # if you want to use the "real" x,y,z from the simulation, put 1, otherwise 0
correctingForDOI = 1       # if you want the program to compute the DOI correction of energy, put 1
usingAllChannels = 0       # if you want to calculate u,v,z using all channels input, put 1. If you want to use only neighbour channels, put 0
wAllChannels     = 0      # if you want to use the sum of all channels to compute w, put 1. If you want to use only neighbour channels to compute w, put 0
backgroundRun    = 0       # if this is a background run (i.e. no source), put 1, else 0 (default to 0)
comptonAnalysis = 1        # if you want to perform interscatter analysis put 1, else 0 (default to 0)
thresholdKev = 10          # ignore input below this Threshold in KeV

# light yield
# lightYieldComputation = 0  #
# qe = 0.35
# gainMPPC = 1.25e6
# chargeBinningADC = 156e-15
# sourceMeV = 0.511
